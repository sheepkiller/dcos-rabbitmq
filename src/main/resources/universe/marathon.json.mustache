{
  "id": "{{service.name}}",
  "cpus": 1.0,
  "mem": 1024,
  "instances": 1,
  "cmd": "export LD_LIBRARY_PATH=$MESOS_SANDBOX/libmesos-bundle/lib:$LD_LIBRARY_PATH; export MESOS_NATIVE_JAVA_LIBRARY=$(ls $MESOS_SANDBOX/libmesos-bundle/lib/libmesos-*.so); export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/jre/); export JAVA_HOME=${JAVA_HOME%/}; export PATH=$(ls -d $JAVA_HOME/bin):$PATH && export JAVA_OPTS=\"-Xms256M -Xmx512M -XX:-HeapDumpOnOutOfMemoryError\" && ./bootstrap -resolve=false -template=false &&  ./rabbitmq-scheduler/bin/rabbitmq ./rabbitmq-scheduler/svc.yml",
  "labels": {
    "DCOS_COMMONS_API_VERSION": "v1",
    "DCOS_COMMONS_UNINSTALL": "true",
    "DCOS_PACKAGE_FRAMEWORK_NAME": "{{service.name}}",
    "MARATHON_SINGLE_INSTANCE_APP": "true",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0",
    "DCOS_SERVICE_SCHEME": "http"
  },
  "env": {
{{#service.virtual_network_enabled}}
    "ENABLE_VIRTUAL_NETWORK": "yes",
    "VIRTUAL_NETWORK_NAME": "{{service.virtual_network_name}}",
    "VIRTUAL_NETWORK_PLUGIN_LABELS": "{{service.virtual_network_plugin_labels}}",
{{/service.virtual_network_enabled}}
    "PACKAGE_NAME": "{{package-name}}",
    "PACKAGE_VERSION": "{{package-version}}",
    "PACKAGE_BUILD_TIME_EPOCH_MS": "{{package-build-time-epoch-ms}}",
    "PACKAGE_BUILD_TIME_STR": "{{package-build-time-str}}",
    "SERVICE_NAME": "{{service.name}}",
    "SERVICE_USER": "{{service.user}}",
    "SERVICE_PRINCIPAL": "{{service.principal}}",
    "FRAMEWORK_LOG_LEVEL": "{{service.log_level}}",
    "MESOS_API_VERSION": "{{service.mesos_api_version}}",
    "RABBITMQ_RES_COUNT": "{{rabbitmq-resources.count}}",
    "RABBITMQ_SVC_PLACEMENT": "{{service.placement_constraint}}",
    "RABBITMQ_RES_CPUS": "{{rabbitmq-resources.cpus}}",
    "RABBITMQ_RES_MEM": "{{rabbitmq-resources.mem}}",
    "RABBITMQ_RES_DISK": "{{rabbitmq-resources.disk}}",
    "RABBITMQ_RES_DISK_TYPE": "{{rabbitmq-resources.disk_type}}",
    "RABBITMQ_RES_DOCKER_IMAGE": "{{ rabbitmq-resources.docker_image }}",

    "RABBITMQ_CFG_NODE_EPMD_PORT": "{{rabbitmq-configuration.epmd_port}}",
    "RABBITMQ_CFG_NODE_AMQP_PORT": "{{rabbitmq-configuration.amqp_port}}",

    "RABBITMQ_CFG_NODE_DIST_PORT": "{{rabbitmq-configuration.dist_port}}",
    "RABBITMQ_CFG_MGMT_PORT": "{{rabbitmq-configuration.mgmt_port}}",
    "RABBITMQ_CFG_ERLANG_COOKIE": "{{rabbitmq-configuration.erlang_cookie}}",
    "RABBITMQ_CFG_CLUSTER_NAME": "{{ rabbitmq-configuration.cluster_name }}",

    "RABBITMQ_ETCD_ENDPOINT": "{{ etcd.etcd_endpoint }}",
    "RABBITMQ_ETCD_PROXY_PORT": "{{ etcd.etcd_proxy_port }}",
    "RABBITMQ_ETCD_PROXY_CPUS" : "{{ etcd.cpus }}",
    "RABBITMQ_ETCD_PROXY_MEM" : "{{ etcd.mem }}",
    "RABBITMQ_ETCD_PROXY_DISK_SIZE" : "{{ etcd.disk_size }}",
    "RABBITMQ_ETCD_PROXY_DISK_TYPE" : "{{ etcd.disk_type }}",

    "RABBITMQ_SIDECARS_CPUS": "{{ sidecars-resources.cpus }}",
    "RABBITMQ_SIDECARS_MEM": "{{ sidecars-resources.mem }}",
    "RABBITMQ_SHARED_DISK_SIZE": "{{ sidecars-resources.disk_size }}",
    "RABBITMQ_SHARED_DISK_TYPE": "{{ sidecars-resources.disk_type }}",


    "JAVA_URI": "{{resource.assets.uris.jre-tar-gz}}",
    "EXECUTOR_URI": "{{resource.assets.uris.executor-zip}}",
    "BOOTSTRAP_URI": "{{resource.assets.uris.bootstrap-zip}}",
    "LIBMESOS_URI": "{{resource.assets.uris.libmesos-bundle-tar-gz}}",
    "CONFIG_TEMPLATE_PATH": "rabbitmq-scheduler"
  },
  "uris": [
    "{{resource.assets.uris.bootstrap-zip}}",
    "{{resource.assets.uris.jre-tar-gz}}",
    "{{resource.assets.uris.scheduler-zip}}",
    "{{resource.assets.uris.libmesos-bundle-tar-gz}}"
  ],
  "upgradeStrategy":{
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  },
  "healthChecks": [
    {
      "protocol": "HTTP",
      "path": "/v1/plans/deploy",
      "gracePeriodSeconds": 900,
      "intervalSeconds": 30,
      "portIndex": 0,
      "timeoutSeconds": 30,
      "maxConsecutiveFailures": 0
    },
    {
      "protocol": "HTTP",
      "path": "/v1/plans/recovery",
      "gracePeriodSeconds": 900,
      "intervalSeconds": 30,
      "portIndex": 0,
      "timeoutSeconds": 30,
      "maxConsecutiveFailures": 0
    }
  ],
  "portDefinitions": [
    {
      "port": 0,
      "protocol": "tcp",
      "name": "api",
      "labels": { "VIP_0": "/api.{{service.name}}:80" }
    }
  ]
}
