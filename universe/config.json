{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "title": "Service name",
          "description": "The name of the service instance",
          "type": "string",
          "default": "rabbitmq"
        },
        "user": {
          "title": "User",
          "description": "[NOOP] The user that the service will run as is defined by docker image. Don't modify it",
          "type": "string",
          "default": "root"
        },
        "principal": {
          "title": "Custom principal (optional)",
          "description": "The principal for the service instance, or empty to use the default.",
          "type": "string",
          "default": ""
        },
        "virtual_networks": {
          "description": "Enable DC/OS Virtual Networking",
          "type": "boolean",
          "default": false
        },
        "secret_name": {
          "title": "Credential secret name (optional)",
          "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "name",
        "user"
      ]
    },
    "rabbitmq-resources": {
      "description": "RabbitMQ nodes resources properties",
      "type": "object",
      "properties": {
        "count": {
          "title": "Node count",
          "description": "Number of Template pods to run",
          "type": "integer",
          "default": 3
        },
        "placement_constraint": {
          "title": "Placement constraint",
          "description": "Marathon-style placement constraint for nodes. Example: 'hostname:UNIQUE'. By the way since the framework requires specific ports UNIQUE constraints is implicit.",
          "type": "string",
          "default": ""
        },
        "virtual_network": {
          "description": "Name of virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "cni_plugin_labels": {
          "description": "Labels to pass to CNI plugin. Comma-seperated key:value pairs. For example [k_0:v_0,k_1:v_1,...,k_n:v_n]",
          "type": "string",
          "default": ""
        },
        "cpus": {
          "title": "CPU count",
          "description": "Template pod CPU requirements",
          "type": "number",
          "default": 1
        },
        "mem": {
          "title": "Memory size (MB)",
          "description": "XXX. Fix me - ROOT support only. Template pod mem requirements (in MB)",
          "type": "integer",
          "default": 1024
        },
        "disk": {
          "title": "Disk size (MB)",
          "description": "Template pod persistent disk requirements (in MB)",
          "type": "integer",
          "default": 1024
        },
        "disk_type": {
          "title": "Disk type [ROOT, MOUNT]",
          "description": "Mount volumes require preconfiguration in DC/OS",
          "enum": [
            "ROOT"
          ],
          "default": "ROOT"
        },
        "docker_image": {
          "title": "Docker image",
          "description": "docker image to use",
          "type": "string",
          "default": "sheepkiller/dcos-rabbitmq:3.6.10-0.0.23"
        }
      },
      "required": [
        "count",
        "cpus",
        "mem",
        "disk",
        "disk_type",
        "docker_image"
      ]
    },
    "rabbitmq-configuration": {
      "description": "RabbitMQ configuration properties",
      "type": "object",
      "properties": {
        "amqp_port": {
          "title": "AMQP port",
          "description": "The port where rabbitmq will listen for processing messages",
          "type": "integer",
          "default": 5672
        },
        "dist_port": {
          "title": "AMQP port",
          "description": "The port where rabbitmq will listen for clustering",
          "type": "integer",
          "default": 25672
        },
        "mgmt_port": {
          "title": "RabbitMQ HTTTP listener port",
          "description": "The port where rabbitmq management console will listen",
          "type": "integer",
          "default": 15672
        },
        "cluster_name": {
          "title": "Cluster Name",
          "description": "[UNIMPLEMENTED] set the cluster name",
          "type": "string",
          "default": "hellowoe"
        },
        "erlang_cookie": {
          "title": "Erlang cookie",
          "description": "The port where rabbitmq will listen",
          "type": "string",
          "default": "joinuswehavecookies"
        },
        "etcd_endpoint": {
          "title": "etcd cluster endpoint",
          "description": "SRV entry of the etcd cluster",
          "type": "string",
          "default": "etcd.mesos"
        }
      },
      "required": [
        "amqp_port",
        "dist_port",
        "mgmt_port",
        "cluster_name",
        "erlang_cookie",
        "etcd_endpoint"
      ]
    }
  }
}
